package agf.ui{	import flash.display.*;	import flash.events.*;	import flash.text.*;	import flash.ui.Keyboard;	import agf.events.ShortcutEvent;		public class ShortcutMgr extends Sprite	{		public function ShortcutMgr () {			addEventListener(Event.ADDED_TO_STAGE, start);			addEventListener(Event.REMOVED_FROM_STAGE, pause);		}				/**		* Contains the current Shortcut sheets		*/		public static var currentSheets:Array = ["app"];				public var altDown:Boolean=false;		public var shiftDown:Boolean=false;		public var ctrlDown:Boolean=false;  // CMD on Mac				/**		* Provide multiple Shortcut sheets to be used		* Contains all shortcutsheets		*/		public var sheets:Object = { app: {} }				private var kbevent:ShortcutEvent;				/**		* Clear a ShortCut Sheet		*/		public function clearSheet ( sheet:String="app" ) :void {			if(sheets[sheet] != null) sheets[sheet] = {};		}				/**		* Pause shortcut processing		*/		public function pause (e:Event) :void {			stage.removeEventListener( KeyboardEvent.KEY_DOWN, keyDownHandler);			stage.removeEventListener( KeyboardEvent.KEY_UP, keyUpHandler);		}				/**		* Start/Resume shortcut processing		*/		public function start (e:Event) :void {			stage.addEventListener( KeyboardEvent.KEY_DOWN, keyDownHandler);			stage.addEventListener( KeyboardEvent.KEY_UP, keyUpHandler);		}				/**		* Add a ShortCut to a Sheet		*/		public function addShortcut ( name:String, sc:String, sheet:String="app" ) :void		{			if( ! sheets[sheet] ) {				// create sheet				sheets[sheet] = {};			}						sheets[sheet][sc] = { name: name };		}				/**		* Remove a ShortCut from a Sheet		*/		public function removeShortcut ( sc:String, sheet:String="app" ) :void { sheets[sheet][sc] = null; }						private function keyDownHandler (event:KeyboardEvent) :void {			altDown = event.altKey;			ctrlDown = event.ctrlKey;			if(shiftDown != event.shiftKey) shiftDown = event.shiftKey;		}				private function keyUpHandler ( event:KeyboardEvent ) :void 		{			altDown = event.altKey;			ctrlDown = event.ctrlKey;			if(shiftDown != event.shiftKey) shiftDown = event.shiftKey;									var id:String="";						if(stage && stage.focus == null) 			{				if(event.keyCode == Keyboard.DELETE) {					id = "del";				}else if(event.keyCode == Keyboard.BACKSPACE) {					id = "backspace";				}else if(event.keyCode == Keyboard.ENTER || event.keyCode == 10 || event.keyCode == 13) {					id = "enter";				}else if(event.keyCode == Keyboard.ESCAPE) {					id ="esc";				}else if(event.keyCode == Keyboard.NUMPAD_ADD) {					id ="+";				}else if(event.keyCode == Keyboard.NUMPAD_SUBTRACT) {					id ="-";				}else if(event.keyCode == Keyboard.END) {					id="end";				}else if(event.keyCode == Keyboard.HOME) {					id="home";				}else if(event.keyCode == Keyboard.INSERT) {					id="ins";				}else if(event.keyCode == Keyboard.PAGE_UP) {					id="PgUp";				}else if(event.keyCode == Keyboard.PAGE_DOWN) {					id="PgDn";				}else if(event.keyCode >= Keyboard.F1 && event.keyCode <= Keyboard.F15) {					id = "F" + ((event.keyCode-Keyboard.F1)+1);				}else if(ctrlDown) {					id = "cmd" + String.fromCharCode(event.charCode);				}else if(altDown) {					id = "alt" + String.fromCharCode(event.charCode);				}else{					id = String.fromCharCode(event.charCode);				}								var sc:Object;								for(var i:int = 0; i < currentSheets.length; i++)				{					// Get shortcut					sc = sheets[ currentSheets[i] ];										// If Available					if( sc && sc[id] ) 					{						var kbevent:ShortcutEvent = new ShortcutEvent( ShortcutEvent.SHORTCUT );						kbevent.command = sc[id];						kbevent.keyName = id;						dispatchEvent( kbevent );					}				}			}// IF stage focus is null		}	}}